---
title: "Дело в красной шляпе: сервер OpenShift от RedHat и установка Jekyll"
---

Очередной акт пьесы о /бесплатных хостингах для Jekyll/, после успешных [[{% post_url 2012-09-19-jekyll-plugins-on-gh %}][покорения GitHub]] и [[{% post_url 2012-11-12-fast-jekyll-on-heroku %}][укрощения Heroku]], посвящается серверу [[https://www.openshift.com/][OpenShift]]. Последний представляет собой облачную [[http://ru.wikipedia.org/wiki/Platform_as_a_service][PaaS]]-платформу от небезызвестной компании [[http://ru.wikipedia.org/wiki/Red_Hat][Red Hat]] на основе открытого исходного кода [[http://openshift.github.io/][OpenShift Origin]]. Поддержка программ на [[https://www.openshift.com/developers/technologies][различных языках]], [[https://www.openshift.com/developers/remote-access][доступ по SSH]] делают установку приложений одновременно гибкой и простой, подробности сего действа в отношении *Jekyll* и будут изложены ниже.

*** Настройка OpenShift и создание приложений

Конечно же, вам стоит начать с [[https://openshift.redhat.com/app/account/new][регистрации на OpenShift]]; управление приложениями осуществляется из [[https://openshift.redhat.com/app/console/applications][web-консоли]] или обычной консоли после установки [[https://www.openshift.com/developers/rhc-client-tools-install][клиентской части]]
#+begin_src console
  $ gem install rhc
#+end_src
Перво-наперво, выполним настройку
#+begin_src console
  $ rhc setup
#+end_src
где вам любезно предложат загрузить публичный SSH-ключ =~/.ssh/id_rsa.pub= (а при его отсутствии --- ещё и создать новый) и выбрать уникальный =namespace= --- субдомен для размещения приложений. В дальнейшем, если нужна справка по команде, дополните её параметром =-h=.

Посредством команд можно добавить вручную как SSH-ключ
#+begin_src console
  $ rhc sshkey add <name> <path to SSH key file>
#+end_src
так и =namespace=
#+begin_src console
  $ rhc domain create <namespace>
#+end_src
Предусмотрена и возможность последующего изменения субдомена приложений:
#+begin_src console
  $ rhc domain update <old namespace> <new namespace>
#+end_src
Само приложение создаётся следующим образом:
#+begin_src console
  $ rhc app create <app> ruby-1.9
#+end_src
где после имени идёт тип приложения, полный список которых выдаётся командой
#+begin_src console
  $ rhc cartridge list
#+end_src
Приложение доступно по адресу =http://<app>-<namespace>.rhcloud.com=. В довершение установки, Git-репозиторий приложения будет клонирован в директорию с именем =<app>=.

*** Генерация сайта с Jekyll

*OpenShift* использует модуль [[https://www.phusionpassenger.com/][Passenger]] (существует в вариациях для *Apache* и *Nginx*), предоставляющий интерфейс [[http://rack.github.io/][Rack]], который в свою очередь управляется файлом =config.ru= в директории приложения. При отсутствии =config.ru= за основу сайта берётся содержимое магической директории =public/=, которая определяет корень приложения /DocumentRoot/. Без сожалений можно расстаться со всеми файлами приложения, за исключением ключевых директорий =.openshift/=, =public/= и, пожалуй, =tmp/= (как временное хранилище файлов). Чтобы *Git* не удалял директории =public/= и =tmp/= (он рассматривает пустые директории как несуществующие), в каждой из них находится пустой файл =.gitkeep=.

При настройке *Jekyll* на *OpenShift*, директорией назначения должна быть =public/=, а запуск сервера отменён (*Passenger* справляется с такими обязанностями на порядок лучше, чем сервер *WEBrick* из состава *Jekyll*), что на языке файла конфигурации =_config.yml= выражается в форме
#+begin_src yaml
  auto: false
  server: false
  destination: public
#+end_src
Не забудем и о файле =public/.gitkeep= (иначе *Jekyll* его запросто удалит). *Jekyll* игнорирует все скрытые файлы, кроме тех, что явно указаны директивой =include= (начиная с версии 0.12). Нужно создать пустой файл =.gitkeep= в директории с исходниками и добавить в =_config.yml= запись
#+begin_src yaml
  include: ['.gitkeep']
#+end_src
Остальные файлы в директории назначения *Git* должен игнорировать в соответствии со строками в =.gitignore=
#+begin_src sh
  /public/*
  !/public/.gitkeep
#+end_src

Однако мы всё ещё не указали запуск *Jekyll*'а, для чего как раз предназначены скрипты в директории =.openshift/action_hooks/=, каждый из которых соответствует [[https://www.openshift.com/developers/deploying-and-building-applications][своей стадии запуска]]. Перед этим делом неплохо ознакомиться с [[https://www.openshift.com/page/openshift-environment-variables][переменными окружения OpenShift]], а также с [[https://www.openshift.com/developers/get-started][примерами приложений]]. В нашем случае достаточно добавить в =.openshift/action_hooks/build= следующее:
#+begin_src sh
  # Fix problem with Jekyll and UTF-8
  export LANG=en_US.UTF-8

  cd $OPENSHIFT_REPO_DIR
  bundle exec jekyll
#+end_src

*** Заключительные штрихи по настройке

Для установки gem'ов, необходимых приложению, создадим =Gemfile=
#+begin_src ruby
  source 'https://rubygems.org'

  gem 'jekyll'
#+end_src
и выполним команду
#+begin_src console
  $ bundle install
#+end_src
После чего развернём приложение на *OpenShift*:
#+begin_src console
  $ echo 'Hello, World!' > index.html
  $ git add .
  $ git commit -m "my first commit"
  $ git push origin master
#+end_src

Для локальной генерации сайта запускается команда
#+begin_src console
  $ bundle exec jekyll serve -w
#+end_src
генерируя сайт по адресу =http://localhost:4000=.
